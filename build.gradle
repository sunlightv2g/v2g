buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
	}
	repositories {
		//mavenCentral()
		maven {
      		url "https://plugins.gradle.org/m2/"
    	}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE") 
		classpath("io.franzbecker:gradle-lombok:1.8")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'io.franzbecker.gradle-lombok'

group = 'com.v2g'
version = '0.0.1'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

//ext['hibernate.version'] = '5.2.11.Final' //

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	//compile('org.apache.tomcat.embed:tomcat-embed-jasper') // jsp
	compile 'pl.allegro.tech.boot:handlebars-spring-boot-starter:0.2.15' // hbs
	runtime('com.h2database:h2')
	compile("org.mariadb.jdbc:mariadb-java-client")
	compile("org.springframework.boot:spring-boot-devtools")
	compile('com.querydsl:querydsl-core')
	compile('com.querydsl:querydsl-apt')
	compile('com.querydsl:querydsl-jpa')
	compile('org.modelmapper:modelmapper:1.1.0')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}


/**** QueryDSL Class Generate Script ****/

def queryDslOutput = file("src/main/generated")

sourceSets {
	generated {
		java {
			srcDir queryDslOutput
		}
	}
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Query dsl Generator') {

 	doFirst {
        if (!queryDslOutput.exists()) {
            logger.info("Creating `$queryDslOutput` directory")
 
            if (!queryDslOutput.mkdirs()) {
                throw new InvalidUserDataException("Unable to create `$queryDslOutput` directory")
            }
        }
    }

	source = sourceSets.main.java
	classpath = configurations.compile
	destinationDir = queryDslOutput
	options.compilerArgs = [
			"-proc:only",
			"-processor", 'com.querydsl.apt.jpa.JPAAnnotationProcessor,lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
	]
	options.encoding = 'UTF-8'

}

compileJava {
	dependsOn generateQueryDSL
	source generateQueryDSL.destinationDir
}

compileGeneratedJava {
	dependsOn generateQueryDSL
	options.warnings = false
	classpath += sourceSets.main.runtimeClasspath
}

clean {
	delete queryDslOutput
}


